---
import Layout from '@layouts/Layout.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import LinkButton from '@components/LinkButton.astro';
import Hr from '@components/Hr.astro';
import CardPost from '@components/CardPost';
import getSortedPosts from '@utils/getSortedPosts';
import slugify from '@utils/slugify';
import type { Frontmatter } from 'src/types';
import Socials from '@components/Socials.astro';
import { SOCIALS } from '@config';

const posts = await Astro.glob<Frontmatter>('../articles/**/*.md');

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ frontmatter }) => frontmatter.featured);

const socialCount = SOCIALS.filter((social) => social.active).length;
---

<Layout>
  <Header />
  <main id="main-content">
    <section id="hero">
      <h1>Seth's dev digest</h1>
      <a target="_blank" href="/rss.xml" class="rss-link" aria-label="rss feed" title="RSS Feed">
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
          ><path d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"></path><path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"></path><circle
            cx="6"
            cy="18"
            r="2"></circle>
        </svg>
      </a>

      <p>
        Thanks for stopping by! I'm Seth, a full stack developer who is passionate about OSS &
        building SaaS applications in public. This is a space for me to share my thoughts and
        experiences as a full stack Typescript React developer. I hope you find my musings helpful
        and informative.
      </p>
      {
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">Let's connect!</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured Posts</h2>
            <ul>
              {featuredPosts.map(({ frontmatter }) => (
                <CardPost
                  href={`/posts/${slugify(frontmatter)}`}
                  post={frontmatter}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          <Hr />
        </>
      )
    }

    <section id="recent-posts">
      <h2>Recent Posts</h2>
      <ul>
        {
          sortedPosts.map(
            ({ frontmatter }, index) =>
              index < 4 && (
                <CardPost
                  href={`/posts/${slugify(frontmatter)}`}
                  post={frontmatter}
                  secHeading={false}
                />
              )
          )
        }
      </ul>
      <div class="all-posts-btn-wrapper">
        <LinkButton href="/posts">
          All Posts
          <svg xmlns="http://www.w3.org/2000/svg"
            ><path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
    </section>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pt-8 pb-6;
  }
  #hero h1 {
    @apply inline-block font-bold my-4 sm:my-8 text-3xl sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply h-6 w-6 scale-110 sm:scale-125 mb-2 sm:mb-3 fill-skin-accent;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply flex flex-col sm:flex-row sm:items-center mt-4;
  }
  .social-links {
    @apply whitespace-nowrap mr-2 sm:mb-0 mb-1;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pt-12 pb-6;
  }
  #featured h2,
  #recent-posts h2 {
    @apply font-semibold text-2xl tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply text-center my-8;
  }
</style>
